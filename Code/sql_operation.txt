books(ISBN, title, author)
students(student_id)
borrows_history(student_id, ISBN, deadline, extend_times)
borrows_current(student_id, ISBN, deadline, extend_times)

0.	CREATE TABLE books(
		ISBN CHAR(32),
		title CHAR(32),
		author CHAR(32),
		PRIMARY KEY(ISBN)
	)
	CREATE TABLE students(
		student_id CHAR(32)
		PRIMARY KEY(student_id)
	)
	CREATE TABLE borrows_current(
		student_id CHAR(32),
		ISBN CHAR(32),
		deadline DATE,
		extend_times INT(4),
		PRIMARY KEY (student_id, ISBN),
		FOREIGN KEY (ISBN) REFERENCES books(ISBN),
		FOREIGN KEY (student_id) REFERENCES students(student_id)
	)
	CREATE TABLE borrows_current(
		student_id CHAR(32),
		ISBN CHAR(32),
		deadline DATE,
		extend_times INT(4),
		PRIMARY KEY (student_id, ISBN),
		FOREIGN KEY (ISBN) REFERENCES books(ISBN),
		FOREIGN KEY (student_id) REFERENCES students(student_id)		
	)


1.  INSERT INTO books VALUES (title, author, ISBN)

2.  DELETE FROM books
        WHERE ISBN = 

3.  INSERT INTO students VALUES (student_id)

4.  SELECT * FROM books
        WHERE ISBN = or title = or author =

5.  SELECT COUNT (*) FROM borrows_current
        WHERE student_id = AND deadline > current_time
    INSERT INTO borrows_current VALUES (student_id, ISBN, deadline, 0)

6.  SELECT * FROM borrows_history
        WHERE student_id = 
    SELECT * FROM borrows_current
        WHERE student_id = 

7.  SELECT * FROM borrows_current
        WHERE student_id = 

8.  SELECT deadline FROM borrows_current
        WHERE ISBN = 

9.  UPDATE borrows_current SET deadline = , extend_times = 
        WHERE extend_times < 3 AND ISBN =        

10. SELECT * FROM borrows_current
        WHERE deadline < current_time AND ISBN = 

11. INSERT INTO borrows_history
        TABLE(
            SELECT * FROM borrows_current
                WHERE borrows_current.student_id = AND borrows_current.ISBN = 
        )
    DELETE FROM borrows_current
        WHERE borrows_current.student_id = AND borrows_current.ISBN = 

12. INSERT INTO 